#!/bin/bash
# Graciously stolen and adapted from https://github.com/apple/swift-docc-plugin/blob/8aca5c543da5f99dbfc8ff04e50c3ac870f8deca/bin/update-gh-pages-documentation-site

set -eu

if [ ! -e 'Package.swift' ]; then
	echo This script must be called from a folder containing a Package.swift file.
	exit 1
fi

repo_name=$1
target=$2

# Use git worktree to checkout the gh-pages branch of this repository in a gh-pages sub-directory
git fetch
git worktree add --checkout gh-pages origin/gh-pages

# Pretty print DocC JSON output so that it can be consistently diffed between commits
export DOCC_JSON_PRETTYPRINT=YES

# Generate documentation for the 'SwiftDocCPlugin' target and output it
# to the /docs subdirectory in the gh-pages worktree directory.
export SWIFTPM_ENABLE_COMMAND_PLUGINS=1
swift package \
	--allow-writing-to-directory 'gh-pages/docs' \
	generate-documentation \
	--target $target \
	--disable-indexing \
	--transform-for-static-hosting \
	--hosting-base-path $repo_name \
	--output-path 'gh-pages/docs'

# Save the current commit we've just built documentation from in a variable
CURRENT_COMMIT_HASH=`git rev-parse --short HEAD`

# Commit and push our changes to the gh-pages branch
cd gh-pages
git add docs

if [ -n "$(git status --porcelain)" ]; then
	echo "Documentation changes found. Commiting the changes to the 'gh-pages' branch and pushing to origin."
	git commit --no-verify --message "Update GitHub Pages documentation site to '$CURRENT_COMMIT_HASH'."
	git push origin HEAD:gh-pages
else
	# No changes found, nothing to commit.
	echo "No documentation changes found."
fi

# Delete the git worktree we created
cd ..
git worktree remove gh-pages
